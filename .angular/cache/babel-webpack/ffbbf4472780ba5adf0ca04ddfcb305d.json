{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { EMPTY } from 'rxjs';\nimport { map, mergeMap, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@app/core/api/services/client/client.service\";\nexport let ClientEffects = /*#__PURE__*/(() => {\n  class ClientEffects {\n    constructor(actions$, clientService) {\n      this.actions$ = actions$;\n      this.clientService = clientService;\n      this.loadClients$ = createEffect(() => this.actions$.pipe(ofType('[Client List] Load clients'), mergeMap(() => this.clientService.getClients().pipe(map(clients => ({\n        type: '[Client List] Loaded success',\n        clients\n      })), catchError(() => EMPTY)))));\n    }\n\n  }\n\n  ClientEffects.ɵfac = function ClientEffects_Factory(t) {\n    return new (t || ClientEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ClientService));\n  };\n\n  ClientEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientEffects,\n    factory: ClientEffects.ɵfac\n  });\n  return ClientEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}