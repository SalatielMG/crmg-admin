{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let PaginatorIntlService = /*#__PURE__*/(() => {\n  class PaginatorIntlService {\n    constructor() {\n      this.changes = new Subject();\n      this.firstPageLabel = 'Primera página';\n      this.itemsPerPageLabel = `Registros por página:`;\n      this.lastPageLabel = `Última página`; // You can set labels to an arbitrary string too, or dynamically compute\n      // it through other third-party internationalization libraries.\n\n      this.nextPageLabel = 'Página siguiente';\n      this.previousPageLabel = 'Página anterior';\n    }\n\n    getRangeLabel(page, pageSize, length) {\n      if (length === 0) {\n        return `Página 1 de 1`;\n      }\n\n      const amountPages = Math.ceil(length / pageSize);\n      return `Página ${page + 1} de ${amountPages}`;\n    }\n\n  }\n\n  PaginatorIntlService.ɵfac = function PaginatorIntlService_Factory(t) {\n    return new (t || PaginatorIntlService)();\n  };\n\n  PaginatorIntlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaginatorIntlService,\n    factory: PaginatorIntlService.ɵfac\n  });\n  return PaginatorIntlService;\n})();","map":null,"metadata":{},"sourceType":"module"}