{"ast":null,"code":"import { PREFIX_API } from '@globals';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ClientService = /*#__PURE__*/(() => {\n  class ClientService {\n    // private _clients: ReplaySubject<ClientModel[]> = new ReplaySubject<ClientModel[]>(1);\n    constructor(httpClient) {\n      this.httpClient = httpClient; // -----------------------------------------------------------------------------------------------------\n      // @ Accessors\n      // -----------------------------------------------------------------------------------------------------\n      // get clients$(): Observable<ClientModel[]> {\n      //     return this._clients.asObservable();\n      // }\n      // -----------------------------------------------------------------------------------------------------\n      // @ Public methods\n      // -----------------------------------------------------------------------------------------------------\n\n      this.getClients = () => {\n        return this.httpClient.get(`${PREFIX_API}/client`).pipe(map(response => {\n          return response.clients;\n        }));\n      };\n\n      this.get = () => {};\n\n      this.create = client => {\n        return this.httpClient.post(`${PREFIX_API}/client`, Object.assign({}, client));\n      };\n\n      this.update = () => {};\n\n      this.delete = () => {};\n    }\n\n  }\n\n  ClientService.ɵfac = function ClientService_Factory(t) {\n    return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientService,\n    factory: ClientService.ɵfac,\n    providedIn: 'root'\n  });\n  return ClientService;\n})();","map":null,"metadata":{},"sourceType":"module"}